version: '2'

tasks:
  avro:
    sources:
      - schemas/avro/*.avsc
    generates:
      - lib/events/authevents/*.go
    cmds:
      - mkdir -p lib/events/authevents/
      - gogen-avro --package authevents lib/events/authevents/ ./schemas/avro/*.avsc

  inject-processor:
    deps:
      - avro
      - copy-shared
    cmds:
      - "telepresence --swap-deployment auth-processor
                     --expose 13041
                     --docker-run
                     -e JAEGER_AGENT_HOST=jaeger
                     -e JAEGER_SAMPLER_TYPE=const
                     -e JAEGER_SAMPLER_PARAM=1
                     -v ${PWD}:/usr/local/code/auth
                     -v ${PWD%/auth}/shared:/usr/local/code/shared
                     -w /usr/local/code/auth
                     --rm -it
                     golang:1.13 /bin/bash"

  inject-api:
    deps:
      - avro
      - copy-shared
    cmds:
      - "telepresence --swap-deployment auth-api
                     --expose 13041
                     --docker-run
                     -e JAEGER_AGENT_HOST=jaeger
                     -e JAEGER_SAMPLER_TYPE=const
                     -e JAEGER_SAMPLER_PARAM=1
                     -v ${PWD}:/usr/local/code/auth
                     -v ${PWD%/auth}/shared:/usr/local/code/shared
                     -w /usr/local/code/auth
                     --rm -it
                     golang:1.13 /bin/bash"

  # NOTE: This is a hack needed because we're trying to cram everything
  # into a single repo and Docker contexts get weird.  This is not a good thing.
  copy-shared:
    sources:
      - ../shared/**/*
    generates:
      - ./lib/shared/**/*
    cmds:
      - cp -R ../shared/ ./lib/shared/

  build:
    deps:
      - avro
      - copy-shared
    cmds:
      - docker build -f Dockerfile.server -t evertras/events-demo-auth-api .
      - docker build -f Dockerfile.processor -t evertras/events-demo-auth-processor .

  build-redis:
    dir: deploy/redis
    cmds:
      - docker build -t evertras/events-demo-auth-redis .

  test:
    deps:
      - avro
    cmds:
      - go test -v ./lib/...

  install-local:
    deps:
      - build
      - build-redis
    cmds:
      - kubectl apply -f deploy/main.yaml
      - kubectl apply -f deploy/redis-commander.yaml

  delete-local:
    cmds:
      - kubectl delete -f deploy/main.yaml
      - kubectl delete -f deploy/redis-commander.yaml

  update-local:
    deps:
      - build
    cmds:
      - kubectl scale deployment.v1.apps/auth-api --replicas=0
      - kubectl scale deployment.v1.apps/auth-processor --replicas=0
      - kubectl scale deployment.v1.apps/auth-api --replicas=2
      - kubectl scale deployment.v1.apps/auth-processor --replicas=3

